var karmaBuilder=karmaBuilder||{};(function($,karmaBuilder){"use strict";karmaBuilder.view=Backbone.View.extend({gizmoParams:{},builderParams:{},elementInfo:{},templateSettings:{evaluate:/<#([\s\S]+?)#>/g,interpolate:/\{\{\{([\s\S]+?)\}\}\}/g,escape:/\{\{([^\}]+?)\}\}(?!\})/g,variable:"data"},events:{karma_builder_published:"karmaPublish","before/elements/create/karma_column":"createElementAction",karma_builder_saved:"karmaSaved"},initialize:function(){},getBuilderParam:function(name){if(0===Object.keys(this.builderParams).length){this.builderParams=JSON.parse(builderParams)}return this.builderParams[name]},getElementInfo:function(name){if(0===Object.keys(this.elementInfo).length){this.elementInfo=JSON.parse(builderElementInfo)}if(name){return this.elementInfo[name]}else{return this.elementInfo}},getGizmoParam:function(name){if(0===Object.keys(this.gizmoParams).length){this.gizmoParams=JSON.parse(builderGizmo)}return this.gizmoParams[name]},render:function(){var that=this;that.settingPanelHtml();that.collection.each(function(element){var elementName=element.attributes.shortcode_name.replace("karma_","");if("undefined"!==typeof karmaBuilder[elementName]){var elementView=new karmaBuilder[elementName]({model:element,el:$('[data-element-key="'+element.attributes.element_key+'"]'),gizmoParams:that.getGizmoParam(element.attributes.shortcode_name),template:wp.template("karma-element-"+element.attributes.shortcode_name)});elementView.renderSettings()}})},prepareAjax:function(action,data){var that=this;return $.ajax({type:"post",url:that.getBuilderParam("ajaxUrl"),data:data})},settingPanelHtml:function(){new karmaBuilder.elementPanel},karmaPublish:function(){var that=this,data={models:that.prepareModels(),id:$('meta[name="post-id"]').attr("content"),action:"publish"};this.prepareAjax("publish",data).done(function(response){var result=JSON.parse(response);return result.result})},karmaSaved:function(){var that=this,data={models:that.prepareModels(),id:$('meta[name="post-id"]').attr("content"),action:"save"};this.prepareAjax("save",data).done(function(response){var result=JSON.parse(response);return result.result})},prepareModels:function(){var models=JSON.parse(JSON.stringify(karmaBuilder.karmaModels));_.each(models,function(model){if(undefined!=model.shortcode_attributes.changed){delete model.shortcode_attributes.changed}});return JSON.stringify(models)},createNewElementKey:function(){var randomString="kb"+this.createRandomString(6);if(karmaBuilder.karmaModels.where({element_key:randomString}).length){return this.createNewElementKey()}return randomString},createRandomString:function(length){var characters="0123456789abcdefghijklmnopqrstuvwxyz",charactersLength=characters.length,randomString="";for(var i=0;i<length;i++){randomString+=characters[Math.floor(Math.random()*(charactersLength-1)+1)]}return randomString},createNewElement:function(elementName,model,shouldRender){if("undefined"!==typeof karmaBuilder[elementName]){shouldRender=shouldRender?shouldRender:true;var elementView=new karmaBuilder[elementName]({model:model,gizmoParams:KarmaView.getGizmoParam(model.attributes.shortcode_name),el:$('[data-element-key="'+model.attributes.element_key+'"]'),template:wp.template("karma-element-"+model.attributes.shortcode_name),renderStatus:shouldRender});elementView.renderSettings()}},createBuilderModel:function(model){model=model?model:this.model;var classes=this.$el.triggerHandler("before/elements/create/"+model.attributes.shortcode_name,[model.attributes.shortcode_attributes]),elementKey=model.attributes.element_key,elementName=model.attributes.shortcode_name,karmaBuilderOutput,tags;classes=classes?classes+" "+elementName.replace("_","-")+"-"+elementKey:elementName.replace("_","-")+"-"+elementKey;karmaBuilderOutput='<div class="karma-builder-element '+classes+'" data-element-key="'+elementKey+'" data-name="'+elementName+'" > '+"</div>",tags='<style id="style-'+elementName.replace("_","-")+"-"+elementKey+'" ></style>'+'<script  id="script-'+elementName.replace("_","-")+"-"+elementKey+'" ><\/script>';return tags+karmaBuilderOutput},createElementAction:function(e,atts){var classes="karma-col-sm-"+atts["sm_size"]+" karma-col-md-"+atts["md_size"]+" karma-col-lg-"+atts["lg_size"]+" karma-col-xl-"+atts["xl_size"];return classes},getWpTemplate:function(templateName,templateParams){if(null===templateParams){templateParams={}}var tempObject=wp.template(templateName);return tempObject(templateParams)},getUnderscoreTemplate:function(templateName,params){var compiled,that=this;compiled=_.template(templateName,that.templateSettings);return compiled(params)}});karmaBuilder.model=Backbone.Model.extend({defaults:{shortcode_name:"karma_section",shortcode_attributes:{},shortcode_content:"",element_key:"defaultKey",order:1,parent_key:"defaultParentKey"}});var KarmaShortcodesCollection=Backbone.Collection.extend({model:karmaBuilder.model});$(document).ready(function(){karmaBuilder.karmaModels=new KarmaShortcodesCollection(JSON.parse(builderModels));window.KarmaView=new karmaBuilder.view({collection:karmaBuilder.karmaModels});KarmaView.render();$(document).tooltip({position:{my:"center bottom-20",at:"center top",using:function(position,feedback){$(this).css(position);$("<div>").addClass("arrow").addClass(feedback.vertical).addClass(feedback.horizontal).appendTo(this)}}})})})(jQuery,karmaBuilder);(function($){var backboneSetElementOriginal=Backbone.View.prototype.setElement;Backbone.View.prototype.setElement=function(element){if(this.el!=element){$(this.el).backboneView("unlink")}$(element).backboneView(this);return backboneSetElementOriginal.apply(this,arguments)};$.expr[":"].backboneView=function(element,intStackIndex,arrProperties,arrNodeStack){return $(element).data("backboneView")!==undefined};var registerViewToElement=function($el,view){$el.data("backboneView",view)};var getClosestViewFromElement=function($el,viewType){var ret=null;viewType=viewType||Backbone.View;while($el.length){$el=$el.closest(":backboneView");ret=$el.length?$el.data("backboneView"):null;if(ret instanceof viewType){break}else{$el=$el.parent()}}return ret};var methods={unlink:function($el){$el.removeData("backboneView")}};$.fn.backboneView=function(){var ret=this;var args=Array.prototype.slice.call(arguments,0);if($.isFunction(methods[args[0]])){methods[args[0]](this)}else if(args[0]&&args[0]instanceof Backbone.View){registerViewToElement(this.first(),args[0])}else{ret=getClosestViewFromElement(this.first(),args[0])}return ret}})(jQuery);